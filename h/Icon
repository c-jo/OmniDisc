#ifndef ICON_H
#define ICON_H

#include "bool.h"
#include "kernel.h"

typedef struct Icon_s {
    char fs[8];      // file system, or empty string
    char disc[12];   // Disc nane, :x or empty string
    int  drive;      // Drive number, or -1
    bool floppy;     // Apply to floppies
    bool winnie;     // Apply to winnies
    char sprite[14]; // Sprite name

    struct Icon_s *next;
} Icon;

// cmd is of form
// (-fs FS) (-disc Disc) icon  -f | -h | -delete
_kernel_oserror *icon_command(Icon **icons, const char *cmd);

/*******************************************************************
 Function:      icon_add
 Description:   Adds an icon for the given fs,disc and drive.
 Parameters:    list  -> current head of the icons list
                sprite-> the name of the sprite to use.
                fs    -> the name of the filing system, or NULL
                disc  -> the name of the disc, or NULL
                drive  = the drive number, or -1
 Returns:       pointer to the new head of the icon list.
 ******************************************************************/
Icon* icon_add(Icon* list, const char *sprite,
               const char *fs, const char *disc, int drive);

/*******************************************************************
 Function:      icon_remove
 Description:   Removes an icon for the given fs,disc and drive.
 Parameters:    list  -> current head of the icons list
                fs    -> the name of the filing system, or NULL
                disc  -> the name of the disc, or NULL
                drive  = the drive number, or -1
 Returns:       pointer to the new head of the icon list.
 ******************************************************************/
Icon* icon_remove(Icon *list,
                  const char *fs, const char *disc, int drive);

/*******************************************************************
 Function:      icon_match
 Description:   Determine a match value for the given icon wirh the
                specified fs/disc/drive.
 Parameters:    icon  -> icon to check
                fs    -> the name of the filing system, or NULL
                disc  -> the name of the disc, or NULL
                drive  = the drive number, or -1
 Returns:       Maatch value (higher is better) or -1 for no match.
 ******************************************************************/
int icon_match(Icon *icon,
               const char *fs, const char *disc, int drive);

/*******************************************************************
 Function:      icon_find
 Description:   Find the best icon to use for the given fs/disc/drive.
 Parameters:    list  -> list of icons.
                fs    -> the name of the filing system, or NULL
                disc  -> the name of the disc, or NULL
                drive  = the drive number, or -1
 Returns:       Sprite name to use.
 ******************************************************************/
const char *icon_find(Icon* list,
                      const char *fs,  const char *disc, int drive);

#endif
