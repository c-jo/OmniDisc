#ifndef ICON_H
#define ICON_H

#include "bool.h"

#include "kernel.h"

typedef struct Icon_s {
    char fs[8];    // file system, or empty string
    char disc[12]; // Disc nane, :x or empty string
    int  drive;    // Drive number, or -1
    bool floppy;   // Apply to floppies
    bool winnie;   // Apply to winnies
    char val[14];  // Validitiy string (Siconname)

    struct Icon_s *next;
} Icon;

// cmd is of form
// (-fs FS) (-disc Disc) icon  -f | -h | -delete
_kernel_oserror *icon_command(Icon **icons, const char *cmd);

/*******************************************************************
 Function:      icon_add
 Description:   Adds an icon for the given fs,disc and drive.
 Parameters:    icons -> current head of the icons list
                sprite-> the name of the sprite to use.
                fs    -> the name of the filing system, or NULL
                disc  -> the name of the disc, or NULL
                drive  = the drive number, or -1
 Returns:       pointer to the new head of the icon list.
 ******************************************************************/
Icon* icon_add(Icon* icons, const char *sprite,
               const char *fs, const char *disc, int drive);

/*******************************************************************
 Function:      icon_remove
 Description:   Removes an icon for the given fs,disc and drive.
 Parameters:    icons -> current head of the icons list
                fs    -> the name of the filing system, or NULL
                disc  -> the name of the disc, or NULL
                drive  = the drive number, or -1
 Returns:       pointer to the new head of the icon list.
 ******************************************************************/
Icon* icon_remove(Icon*icons,
                  const char *fs, const char *disc, int drive);


// Returns a match value for the given icon with fs/disc/drive, -1 for no match
// The higher the number the better the match.
int icon_match(Icon *icon, const char *fs, int drive, const char *discname);

// Find the best icon for the given drive and return it's validation string. If
// one cannot be found, return Sharddisc or Sfloppydisc (depending on drive)
const char *icon_find(Icon* icons, const char *fs, int drive, const char *discname);

#endif
