#include <ctype.h>
#include <stdlib.h>
#include <string.h>
#include "swis.h"

#include "Icon.h"

static int stricmp(const char *s1, const char *s2)
{
     while (*s1 != 0)
         if (toupper(*s1++) != toupper(*s2++)) return 1;
     return 0;
}

_kernel_oserror *icon_command(Icon **icons, const char *cmd)
{
    static unsigned ra_buf[64];
    _kernel_oserror *e = 0;
    e = _swix(OS_ReadArgs, _INR(0,3),
                  "fs/K,disc/K,icon,delete/S,f/S,h/S",
                  cmd, &ra_buf, sizeof(ra_buf));
    if (e)
        return e;

    if (ra_buf[3] == 0)
    {
        Icon *icon = malloc(sizeof(Icon));
        icon->prev = 0;
        icon->next = *icons;
        if (icon->next)
            icon->next->prev = icon;

        strcpy(icon->fs,   ra_buf[0] ? (char*)ra_buf[0] : "");
        strcpy(icon->disc, ra_buf[1] ? (char*)ra_buf[1] : "");
        if (ra_buf[2])
        {
            icon->val[0] = 'S';
             strcpy(icon->val+1, (char*)ra_buf[2]);
        }
        else
            icon->val[0] = 0;

        *icons = icon;
    }
    else
    {
        // Delete
    }
    return 0;
}

int icon_match(Icon* icon, const char *fs, int drive, const char *discname)
{
    if (stricmp(fs, icon->fs)) return -1;
    if (drive < 4 && !icon->floppy) return -1;
    if (drive > 3 && !icon->winnie) return -1;

    if (icon->disc[0] != 0)
    {
        if (icon->disc[0] == ':')
            return (icon->disc[1] == drive+48) ? 1 : -1;
        else
            return (!stricmp(icon->disc, discname)) ? 2 : -1;
    }

    return 0;
}

const char *icon_find(Icon* icons, const char *fs, int drive, const char *discname)
{
    const char *v = 0;
    int s = -1;

    while (icons)
    {
         int t = icon_match(icons, fs, drive, discname);
         if (t > s)
         {
             v = icons->val;
             s = t;
         }
         icons = icons->next;
    }

    if (v)
        return v;

    if (drive > 3) return "Sharddisc";
    if (drive < 4) return "Sfloppydisc";

}

